apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
  namespace: tenant-1
data:
  nginx.conf: |
    user  nginx;
    worker_processes  auto;
    error_log  /var/log/nginx/error.log warn;
    pid        /var/run/nginx.pid;

    events {
        worker_connections  1024;
    }

    http {
        include       /etc/nginx/mime.types;
        default_type  application/octet-stream;
        log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                          '$status $body_bytes_sent "$http_referer" '
                          '"$http_user_agent" "$http_x_forwarded_for"';
        access_log  /var/log/nginx/access.log  main;
        sendfile        on;
        keepalive_timeout  65;

        map $uri $maintenance_mode {
            default 0;
            "~^/secured" 1;
        }

        server {
            listen       80;
            server_name  localhost;

            location / {
                if ($maintenance_mode) {
                    return 302 /maintenance.html;
                }
                root   /usr/share/nginx/html;
                index  index.html index.htm;
                try_files $uri $uri/ =404;
            }

            location /auth {
                proxy_pass http://keycloak:8080/auth/realms/myrealm/protocol/openid-connect/auth;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
            }

            location /secured {
                auth_request /auth;
                error_page 401 = /unauthorized.html;
                proxy_pass http://app_server;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
            }

            location /maintenance.html {
                root /usr/share/nginx/html;
                index maintenance.html;
            }

            error_page 404 /404.html;
            location = /404.html {
            }

            error_page 500 502 503 504 /50x.html;
            location = /50x.html {
            }
        }
    }
